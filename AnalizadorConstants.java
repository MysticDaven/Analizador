/* Generated By:JavaCC: Do not edit this line. AnalizadorConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AnalizadorConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 1;
  /** RegularExpression Id. */
  int STATIC = 2;
  /** RegularExpression Id. */
  int VOID = 3;
  /** RegularExpression Id. */
  int STRING = 4;
  /** RegularExpression Id. */
  int INT = 5;
  /** RegularExpression Id. */
  int FLOAT = 6;
  /** RegularExpression Id. */
  int CHAR = 7;
  /** RegularExpression Id. */
  int INTEGER = 8;
  /** RegularExpression Id. */
  int PARSEINT = 9;
  /** RegularExpression Id. */
  int IF = 10;
  /** RegularExpression Id. */
  int FOR = 11;
  /** RegularExpression Id. */
  int TRUE = 12;
  /** RegularExpression Id. */
  int FALSE = 13;
  /** RegularExpression Id. */
  int BOOLEAN = 14;
  /** RegularExpression Id. */
  int ELSE = 15;
  /** RegularExpression Id. */
  int WHILE = 16;
  /** RegularExpression Id. */
  int RETURN = 17;
  /** RegularExpression Id. */
  int IMPORT = 18;
  /** RegularExpression Id. */
  int NULL = 19;
  /** RegularExpression Id. */
  int LENGTH = 20;
  /** RegularExpression Id. */
  int DO = 21;
  /** RegularExpression Id. */
  int SWITCH = 22;
  /** RegularExpression Id. */
  int CASE = 23;
  /** RegularExpression Id. */
  int BREAK = 24;
  /** RegularExpression Id. */
  int NUMERODECIMAL = 25;
  /** RegularExpression Id. */
  int ID = 26;
  /** RegularExpression Id. */
  int NEGEX = 27;
  /** RegularExpression Id. */
  int MODULO = 28;
  /** RegularExpression Id. */
  int TEXTO = 29;
  /** RegularExpression Id. */
  int NUMENT = 30;
  /** RegularExpression Id. */
  int FINLINEA = 31;
  /** RegularExpression Id. */
  int COMA = 32;
  /** RegularExpression Id. */
  int GUIONES = 33;
  /** RegularExpression Id. */
  int ABRIRLLA = 34;
  /** RegularExpression Id. */
  int CERRARLLA = 35;
  /** RegularExpression Id. */
  int ABRIRPAR = 36;
  /** RegularExpression Id. */
  int CERRARPAR = 37;
  /** RegularExpression Id. */
  int ABRIRCOR = 38;
  /** RegularExpression Id. */
  int CERRARCOR = 39;
  /** RegularExpression Id. */
  int PUNTO = 40;
  /** RegularExpression Id. */
  int DOSPUNTOS = 41;
  /** RegularExpression Id. */
  int MAS = 42;
  /** RegularExpression Id. */
  int MENOS = 43;
  /** RegularExpression Id. */
  int POR = 44;
  /** RegularExpression Id. */
  int ENTRE = 45;
  /** RegularExpression Id. */
  int NEGAR = 46;
  /** RegularExpression Id. */
  int COMILLAS = 47;
  /** RegularExpression Id. */
  int MAYORQUE = 48;
  /** RegularExpression Id. */
  int MENORQUE = 49;
  /** RegularExpression Id. */
  int IGUAL = 50;
  /** RegularExpression Id. */
  int OR = 51;
  /** RegularExpression Id. */
  int AND = 52;
  /** RegularExpression Id. */
  int ALGO = 53;
  /** RegularExpression Id. */
  int MENORIGUAL = 54;
  /** RegularExpression Id. */
  int MAYORIGUAL = 55;
  /** RegularExpression Id. */
  int IGUALIGUAL = 56;
  /** RegularExpression Id. */
  int DIFERENTEDE = 57;
  /** RegularExpression Id. */
  int ERROR_DECIMAL = 67;
  /** RegularExpression Id. */
  int ERROR_ID = 68;
  /** RegularExpression Id. */
  int ERROR_SIMBOLO = 69;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int Comentario = 1;
  /** Lexical state. */
  int ComentarioLineas = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"class\"",
    "\"static\"",
    "\"void\"",
    "\"String\"",
    "\"int\"",
    "\"float\"",
    "\"char\"",
    "\"Integer\"",
    "\"parseInt\"",
    "\"if\"",
    "\"for\"",
    "\"true\"",
    "\"false\"",
    "\"boolean\"",
    "\"else\"",
    "\"while\"",
    "\"return\"",
    "\"import\"",
    "\"null\"",
    "\"length\"",
    "\"do\"",
    "\"switch\"",
    "\"case\"",
    "\"break\"",
    "<NUMERODECIMAL>",
    "<ID>",
    "\"!\"",
    "\"%\"",
    "<TEXTO>",
    "<NUMENT>",
    "\";\"",
    "\",\"",
    "<GUIONES>",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\":\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"~\"",
    "\"\\\"\"",
    "\">\"",
    "\"<\"",
    "\"=\"",
    "\"|\"",
    "\"&\"",
    "\"\\\\\"",
    "\"<=\"",
    "\">=\"",
    "\"==\"",
    "\"!=\"",
    "\"//\"",
    "\"/*\"",
    "<token of kind 60>",
    "<token of kind 61>",
    "\"*/\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<ERROR_DECIMAL>",
    "<ERROR_ID>",
    "<ERROR_SIMBOLO>",
  };

}
